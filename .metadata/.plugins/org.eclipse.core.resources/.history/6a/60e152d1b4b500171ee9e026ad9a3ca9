package com.phonebook.simplephonebook.rest;

import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


import model.Contact;

@RestController
@EnableAutoConfiguration
public class ManageContacts {

	private List<Contact> allContacts = new ArrayList<Contact>();
	
    public static void main(String[] args) throws Exception {
        SpringApplication.run(ManageContacts.class, args);
    }
    
	
	@RequestMapping(value ="/addContact", method=RequestMethod.POST)
	Contact addContact(Contact contact) throws IOException {
		allContacts.add(contact);
		return contact;
    }

	@RequestMapping(value ="/addContacts", method=RequestMethod.POST)
	List<Contact> addContacts(List<Contact> contacts) throws IOException {
		allContacts.addAll(contacts);
		return contacts;
    }

	@RequestMapping(value ="/removeContact", method=RequestMethod.POST)
	Contact removeContact(Contact contact) throws IOException {
		allContacts.remove(contact);
		return contact;
		
    }

	@RequestMapping(value ="/getContactByName", method=RequestMethod.GET)
	Contact getContactByName(String name) throws IOException {
		for (Contact contact: allContacts) {
			if (contact.getName().equals(name)) {
				return contact;
			}
		}
		return null;
		
    }


	@RequestMapping(value ="/searchContacts", method=RequestMethod.POST)
	List<Contact> searchContacts(Contact contact) throws IOException {
		
    }

	
}
